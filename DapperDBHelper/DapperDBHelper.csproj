<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Description>To make full use of web APIs, exclude the installation of extra packages by just installing DapperDBHelper. 
Create an object of DapperDBHelper and pass your connection string through the constructor of the DBHelper class. 

Here's how you can use DapperDBHelper. Below is an example:

public class SetupsController
{
    private readonly DBHelpers _dBHelpers;

    public SetupsController()
    {
        _dBHelpers = new DBHelpers(ConectionString.connectionString);
    }

    public async Task&lt;List&lt;YourViewModelClass&gt;&gt; GetSingleListAsync()
    {
        var result = await _dBHelpers.QueryAsyncList&lt;YourViewModelClass&gt;("SELECT * FROM table");
        return result;
    }

    public YourViewModelClass GetSingleRecord()
    {
        var result = _dBHelpers.Query&lt;YourViewModelClass&gt;("SELECT TOP 1 * FROM table");
        return result;
    }

    public async Task&lt;Dictionary&lt;string, IEnumerable&lt;object&gt;&gt;&gt; GetMultipleTablesAsync(int id)
    {
        // Make a list of table names that your stored procedure returns
        List&lt;string&gt; tableNames = new List&lt;string&gt;
        {
            "Table1",
            "Table2",
            "Table3"
        };

        var result = await _dBHelpers.QueryMultipleAsync("EXEC Store_Procedure @ID", new { ID = id }, tableNames);
        return result;
    }

    // Execute Method is used for CRUD operations
    // After execution of your stored procedure, returning a single row of current execution is a best practice
    // ExecuteAsync call depends upon your application nature
    public async Task&lt;int&gt; InsertDataAsync(Employees model)
    {
        var result = await _dBHelpers.ExecuteAsync("EXEC Store_Procedure @FirstName, @LastName, @Address", new { FirstName = model.FirstName, LastName = model.LastName, Address = model.Address });
        return result;
    }
}




For .NET 8, you can use the following code:


// Register your service here
builder.Services.AddTransient&lt;DBHelpersForAllDatabases&gt;();

// Register your database connection
builder.Services.AddTransient&lt;IDbConnection&gt;(_ =&gt; new SqlConnection(Configuration.GetConnectionString("DefaultConnection")));

public class MyController : ControllerBase
{
    private readonly DBHelpersForAllDatabases _dbHelpers;

    public MyController(DBHelpersForAllDatabases dbHelpers)
    {
        _dbHelpers = dbHelpers;
    }

    [HttpGet]
    public async Task&lt;IActionResult&gt; Get()
    {
        // Use DBHelpers to execute queries
        var result = await _dbHelpers.QueryAsyncList&lt;MyModel&gt;("SELECT * FROM MyTable");
        return Ok(result);
    }
}


In this setup:

GetSingleListAsync: Asynchronously retrieves a list of records from a table.
GetSingleRecord: Retrieves a single record from a table.
GetMultipleTablesAsync: Executes a stored procedure that returns multiple tables and maps them to a dictionary.
InsertDataAsync: Executes a stored procedure to insert data into a table.
Make sure to adjust the method signatures and implementations to match your specific use case and requirements. This setup allows you to effectively manage database interactions using DapperDBHelper in a streamlined manner.

































</Description>
    <Copyright>Create By Inam Abbas</Copyright>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <RepositoryType></RepositoryType>
    <Version>1.7.0</Version>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <PackageTags>DapperDbHelper, DBHelper,Generic,DapperGenerics, Dapper DB Pacakage, Dapper API, API Helper Dapper</PackageTags>
    <FileVersion>1.2.0.0</FileVersion>
    <Title>Now this is also avaliable for All Databases</Title>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Dapper" Version="2.1.35" />
    <PackageReference Include="FirebirdSql.Data.FirebirdClient" Version="10.2.0" />
    <PackageReference Include="Microsoft.Data.Sqlite.Core" Version="8.0.6" />
    <PackageReference Include="MySql.Data" Version="8.4.0" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="Npgsql" Version="8.0.3" />
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="8.0.0" />
    <PackageReference Include="System.Data.Common" Version="4.3.0" />
    <PackageReference Include="System.Data.SqlClient" Version="4.8.6" />
  </ItemGroup>

</Project>
